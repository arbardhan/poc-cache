// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/main/proto/OperationRequestType.proto

package org.poc.cache.server.proto;

public final class OperationRequestTypeOuterClass {
  private OperationRequestTypeOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code org.poc.cache.server.proto.OperationRequestType}
   */
  public enum OperationRequestType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * ALL SIMPLE GET REQUESTS , COUNT ETC
     * </pre>
     *
     * <code>FETCH = 0;</code>
     */
    FETCH(0),
    /**
     * <pre>
     * ALL Requests THAT MODIFY THE MAP - PUT , CLEAR
     * </pre>
     *
     * <code>ALTER = 1;</code>
     */
    ALTER(1),
    /**
     * <pre>
     * WILL CLEAR THE MAP
     * </pre>
     *
     * <code>CLEAR = 2;</code>
     */
    CLEAR(2),
    /**
     * <pre>
     * WILL CHECK IF KEY EXISTS IN A MAP
     * </pre>
     *
     * <code>EXISTS = 3;</code>
     */
    EXISTS(3),
    /**
     * <pre>
     * WHEN DATA IS MOVED ACROSS PARTITIONS
     * </pre>
     *
     * <code>DISTRIBUTION = 4;</code>
     */
    DISTRIBUTION(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * ALL SIMPLE GET REQUESTS , COUNT ETC
     * </pre>
     *
     * <code>FETCH = 0;</code>
     */
    public static final int FETCH_VALUE = 0;
    /**
     * <pre>
     * ALL Requests THAT MODIFY THE MAP - PUT , CLEAR
     * </pre>
     *
     * <code>ALTER = 1;</code>
     */
    public static final int ALTER_VALUE = 1;
    /**
     * <pre>
     * WILL CLEAR THE MAP
     * </pre>
     *
     * <code>CLEAR = 2;</code>
     */
    public static final int CLEAR_VALUE = 2;
    /**
     * <pre>
     * WILL CHECK IF KEY EXISTS IN A MAP
     * </pre>
     *
     * <code>EXISTS = 3;</code>
     */
    public static final int EXISTS_VALUE = 3;
    /**
     * <pre>
     * WHEN DATA IS MOVED ACROSS PARTITIONS
     * </pre>
     *
     * <code>DISTRIBUTION = 4;</code>
     */
    public static final int DISTRIBUTION_VALUE = 4;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static OperationRequestType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static OperationRequestType forNumber(int value) {
      switch (value) {
        case 0: return FETCH;
        case 1: return ALTER;
        case 2: return CLEAR;
        case 3: return EXISTS;
        case 4: return DISTRIBUTION;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<OperationRequestType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        OperationRequestType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<OperationRequestType>() {
            public OperationRequestType findValueByNumber(int number) {
              return OperationRequestType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.poc.cache.server.proto.OperationRequestTypeOuterClass.getDescriptor().getEnumTypes().get(0);
    }

    private static final OperationRequestType[] VALUES = values();

    public static OperationRequestType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private OperationRequestType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:org.poc.cache.server.proto.OperationRequestType)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n)src/main/proto/OperationRequestType.pr" +
      "oto\022\032org.poc.cache.server.proto*U\n\024Opera" +
      "tionRequestType\022\t\n\005FETCH\020\000\022\t\n\005ALTER\020\001\022\t\n" +
      "\005CLEAR\020\002\022\n\n\006EXISTS\020\003\022\020\n\014DISTRIBUTION\020\004b\006" +
      "proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
